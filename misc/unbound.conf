# For more information see the unbound.conf documentation at
# https://nlnetlabs.nl/documentation/unbound/unbound.conf

server:
    # interface: <ip address[@port]>
    #     Interface to use to connect to the network.  This  interface  is
    #     listened to for queries from clients, and answers to clients are
    #     given from it.  Can be given multiple times to work  on  several
    #     interfaces. If none are given the default is to listen to local-
    #     host.  If an interface name is used instead of  an  ip  address,
    #     the list of ip addresses on that interface are used.  The inter-
    #     faces are not changed on  a  reload  (kill  -HUP)  but  only  on
    #     restart.   A  port  number  can be specified with @port (without
    #     spaces between interface and port number), if not specified  the
    #     default port (from port) is used.
    interface: 127.0.0.1

    # port: <port number>
    #     The  port  number,  default  53, on which the server responds to
    #     queries.
    port: 5335

    # do-ip4: <yes or no>
    #     Enable or disable whether ip4 queries are  answered  or  issued.
    #     Default is yes.
    do-ip4: yes

    # do-tcp: <yes or no>
    #     Enable or disable whether TCP queries are  answered  or  issued.
    #     Default is yes.
    do-tcp: yes

    # do-udp: <yes or no>
    #     Enable  or  disable  whether UDP queries are answered or issued.
    #     Default is yes.
    do-udp: yes

    # prefer-ip4: <yes or no>
    #     If enabled, prefer IPv4 transport for sending DNS queries to in-
    #     ternet  nameservers. Default is no.  Useful if the IPv6 netblock
    #     the server has, the entire /64 of that is not owned by one oper-
    #     ator  and  the reputation of the netblock /64 is an issue, using
    #     IPv4 then uses the IPv4 filters that the upstream servers have.
    #prefer-ip4: no
    
    # access-control: <IP netblock> <action>
    #     The  netblock  is  given as an IP4 or IP6 address with /size ap-
    #     pended for a classless network block. The action  can  be  deny,
    #     refuse,   allow,  allow_setrd,  allow_snoop,  deny_non_local  or
    #     refuse_non_local.  The most specific netblock match is used,  if
    #     none match deny is used.  The order of the access-control state-
    #     ments therefore does not matter.
    access-control: 192.168.0.0/16 allow
    access-control: fd80::/64 allow
    access-control: fe80::/64 allow
    
    # so-rcvbuf: <number>
    #     If  not 0, then set the SO_RCVBUF socket option to get more buf-
    #     fer space on UDP port 53 incoming queries.  So that short spikes
    #     on  busy  servers  do  not  drop packets (see counter in netstat
    #     -su).  Default is 0 (use system value).  Otherwise,  the  number
    #     of  bytes to ask for, try "4m" on a busy server.  The OS caps it
    #     at a maximum, on linux unbound needs root permission  to  bypass
    #     the  limit,  or  the admin can use sysctl net.core.rmem_max.  On
    #     BSD change kern.ipc.maxsockbuf in /etc/sysctl.conf.  On  OpenBSD
    #     change header and recompile kernel. On Solaris ndd -set /dev/udp
    #     udp_max_buf 8388608.
    so-rcvbuf: 4m

    # so-sndbuf: <number>
    #     If not 0, then set the SO_SNDBUF socket option to get more  buf-
    #     fer  space  on UDP port 53 outgoing queries.  This for very busy
    #     servers handles spikes in answer traffic, otherwise  'send:  re-
    #     source temporarily unavailable' can get logged, the buffer over-
    #     run is also visible by netstat -su.  Default is  0  (use  system
    #     value).   Specify  the number of bytes to ask for, try "4m" on a
    #     very busy server.  The OS caps it at a maximum, on linux unbound
    #     needs  root permission to bypass the limit, or the admin can use
    #     sysctl net.core.wmem_max.  On BSD, Solaris changes  are  similar
    #     to so-rcvbuf.
    so-sndbuf: 4m
    
    # msg-cache-slabs: <number>
    #     Number of slabs in the message cache.  Slabs  reduce  lock  con-
    #     tention  by  threads.   Must  be  set  to  a power of 2. Setting
    #     (close) to the number of cpus is a reasonable guess.
    msg-cache-slabs: 4

    # rrset-cache-slabs: <number>
    #     Number of slabs in the RRset cache. Slabs reduce lock contention
    #     by threads.  Must be set to a power of 2.
    rrset-cache-slabs: 4

    # infra-cache-slabs: <number>
    #     Number  of  slabs in the infrastructure cache. Slabs reduce lock
    #     contention by threads. Must be set to a power of 2.
    infra-cache-slabs: 4

    # key-cache-slabs: <number>
    #     Number of slabs in the key cache. Slabs reduce  lock  contention
    #     by threads.  Must be set to a power of 2. Setting (close) to the
    #     number of cpus is a reasonable guess.
    key-cache-slabs: 4

    # rrset-cache-size: <number>
    #     Number of bytes size of the RRset cache. Default is 4 megabytes.
    #     A  plain  number  is  in bytes, append 'k', 'm' or 'g' for kilo-
    #     bytes, megabytes or gigabytes (1024*1024 bytes in a megabyte).
    rrset-cache-size: 64m

    # msg-cache-size: <number>
    #     Number  of  bytes  size  of  the  message  cache.  Default  is 4
    #     megabytes.  A plain number is in bytes, append 'k', 'm'  or  'g'
    #     for  kilobytes,  megabytes  or  gigabytes  (1024*1024 bytes in a
    #     megabyte).
    msg-cache-size: 32m

    # key-cache-size: <number>
    #     Number of bytes size of the key cache. Default is  4  megabytes.
    #     A  plain  number  is  in bytes, append 'k', 'm' or 'g' for kilo-
    #     bytes, megabytes or gigabytes (1024*1024 bytes in a megabyte).
    key-cache-size: 4m

    # neg-cache-size: <number>
    #     Number of bytes size of the aggressive negative  cache.  Default
    #     is  1  megabyte.  A plain number is in bytes, append 'k', 'm' or
    #     'g' for kilobytes, megabytes or gigabytes (1024*1024 bytes in  a
    #     megabyte).
    neg-cache-size: 4m

    # cache-max-ttl: <seconds>
    #     Time  to  live maximum for RRsets and messages in the cache. De-
    #     fault is 86400 seconds (1 day).  When the TTL expires, the cache
    #     item  has  expired.   Can  be set lower to force the resolver to
    #     query for data often, and not trust  (very  large)  TTL  values.
    #     Downstream clients also see the lower TTL.
    cache-max-ttl: 172800

    # cache-min-ttl: <seconds>
    #     Time  to  live minimum for RRsets and messages in the cache. De-
    #     fault is 0.  If the minimum kicks in, the  data  is  cached  for
    #     longer than the domain owner intended, and thus less queries are
    #     made to look up the data.  Zero makes sure the data in the cache
    #     is  as the domain owner intended, higher values, especially more
    #     than an hour or so, can lead to trouble as the data in the cache
    #     does not match up with the actual data any more.
    cache-min-ttl: 7200
    
    # fast-server-permil: <number>
    #     Specify how many times out of 1000 to pick from the set of fastest
    #     servers.  0 turns the feature off.  A value of 900 would pick from
    #     the fastest servers 90 percent of the time, and would perform nor-
    #     mal exploration of random servers for  the  remaining  time.  When
    #     prefetch  is  enabled  (or serve-expired), such prefetches are not
    #     sped up, because there is no one waiting for it, and it presents a
    #     good moment to perform server exploration. The fast-server-num op-
    #     tion can be used to specify the size of the fastest  servers  set.
    #     The default for fast-server-permil is 0.
    fast-server-permil: 750

    # fast-server-num: <number>
    #     Set  the number of servers that should be used for fast server se-
    #     lection. Only use the fastest specified number of servers with the
    #     fast-server-permil  option, that turns this on or off. The default
    #     is to use the fastest 3 servers.
    fast-server-num: 10

    # target-fetch-policy: <"list of numbers">
    #     Set the target fetch policy used by unbound to determine  if  it
    #     should  fetch nameserver target addresses opportunistically. The
    #     policy is described per dependency depth.

    #     The number of values determines  the  maximum  dependency  depth
    #     that  unbound  will  pursue in answering a query.  A value of -1
    #     means to fetch all targets opportunistically for that dependency
    #     depth.  A  value  of 0 means to fetch on demand only. A positive
    #     value fetches that many targets opportunistically.

    #     Enclose the list between quotes ("") and put spaces between num-
    #     bers.   The default is "3 2 1 0 0". Setting all zeroes, "0 0 0 0
    #     0" gives behaviour closer to that of BIND 9, while  setting  "-1
    #     -1  -1  -1  -1" gives behaviour rumoured to be closer to that of
    #     BIND 8.
    target-fetch-policy: "-1 -1  -1  -1  -1"
    
    # harden-short-bufsize: <yes or no>
    #     Very small EDNS buffer sizes from queries are  ignored.  Default
    #     is on, as described in the standard.
    harden-short-bufsize: yes

    # harden-large-queries: <yes or no>
    #     Very  large queries are ignored. Default is off, since it is le-
    #     gal protocol wise to send these, and could be necessary for  op-
    #     eration if TSIG or EDNS payload is very large.
    harden-large-queries: yes

    # harden-glue: <yes or no>
    #     Will  trust glue only if it is within the servers authority. De-
    #     fault is yes.
    harden-glue: yes

    # harden-dnssec-stripped: <yes or no>
    #     Require DNSSEC data for trust-anchored zones, if  such  data  is
    #     absent,  the  zone  becomes  bogus. If turned off, and no DNSSEC
    #     data is received (or the DNSKEY data fails  to  validate),  then
    #     the  zone  is made insecure, this behaves like there is no trust
    #     anchor. You could turn this off if you are sometimes  behind  an
    #     intrusive  firewall (of some sort) that removes DNSSEC data from
    #     packets, or a zone changes from  signed  to  unsigned  to  badly
    #     signed  often. If turned off you run the risk of a downgrade at-
    #     tack that disables security for a zone. Default is yes.
    harden-dnssec-stripped: yes

    # harden-below-nxdomain: <yes or no>
    #     From RFC 8020 (with title "NXDOMAIN: There Really Is Nothing Un-
    #     derneath"), returns nxdomain to queries for a name below another
    #     name that is already known to be nxdomain.  DNSSEC mandates  no-
    #     error  for empty nonterminals, hence this is possible.  Very old
    #     software might return nxdomain for empty nonterminals (that usu-
    #     ally happen for reverse IP address lookups), and thus may be in-
    #     compatible with this.  To try to avoid this  only  DNSSEC-secure
    #     nxdomains  are  used,  because  the  old  software does not have
    #     DNSSEC.  Default is yes.  The  nxdomain  must  be  secure,  this
    #     means nsec3 with optout is insufficient.
    harden-below-nxdomain: yes

    # harden-referral-path: <yes or no>
    #     Harden  the  referral  path by performing additional queries for
    #     infrastructure data.  Validates the replies if trust anchors are
    #     configured and the zones are signed.  This enforces DNSSEC vali-
    #     dation on nameserver NS sets and the nameserver  addresses  that
    #     are encountered on the referral path to the answer.  Default no,
    #     because it burdens the authority servers,  and  it  is  not  RFC
    #     standard,  and could lead to performance problems because of the
    #     extra query load that is generated.   Experimental  option.   If
    #     you  enable  it  consider  adding  more  numbers  after the tar-
    #     get-fetch-policy to increase the max depth that is checked to.
    harden-referral-path: yes

    # harden-algo-downgrade: <yes or no>
    #     Harden against algorithm downgrade when multiple algorithms  are
    #     advertised  in  the  DS record.  If no, allows the weakest algo-
    #     rithm to validate the zone.  Default is no.  Zone  signers  must
    #     produce  zones  that  allow  this feature to work, but sometimes
    #     they do not, and turning this option off avoids that  validation
    #     failure.
    harden-algo-downgrade: yes

    # aggressive-nsec: <yes or no>
    #     Aggressive NSEC uses the DNSSEC NSEC chain to  synthesize  NXDO-
    #     MAIN  and  other  denials, using information from previous NXDO-
    #     MAINs answers.  Default is no.  It helps  to  reduce  the  query
    #     rate  towards  targets  that  get  a  very high nonexistent name
    #     lookup rate.
    aggressive-nsec: yes
    
    # outgoing-range: <number>
    #     Number  of ports to open. This number of file descriptors can be
    #     opened per thread. Must be at least 1. Default depends  on  com-
    #     pile options. Larger numbers need extra resources from the oper-
    #     ating system.  For performance a very large value is  best,  use
    #     libevent to make this possible.
    outgoing-range: 8192

    # num-queries-per-thread: <number>
    #     The number of queries that every thread will service  simultane-
    #     ously.   If  more  queries  arrive  that  need servicing, and no
    #     queries can  be  jostled  out  (see  jostle-timeout),  then  the
    #     queries  are  dropped.  This forces the client to resend after a
    #     timeout; allowing the  server  time  to  work  on  the  existing
    #     queries. Default depends on compile options, 512 or 1024.
    num-queries-per-thread: 4096
    
    # module-config: <"module names">
    #    Module  configuration,  a list of module names separated by spa-
    #    ces, surround the string with quotes (""). The  modules  can  be
    #    validator,  iterator.  Setting this to "iterator" will result in
    #    a non-validating server.  Setting this to  "validator  iterator"
    #    will  turn on DNSSEC validation.  The ordering of the modules is
    #    important.  You must also set trust-anchors for validation to be
    #    useful.   The  default is "validator iterator".  When the server
    #    is built with EDNS client subnet support the default is "subnet-
    #    cache  validator iterator".  Most modules that need to be listed
    #    here have to be listed  at  the  beginning  of  the  line.   The
    #    cachedb  module  has to be listed just before the iterator.  The
    #    python module can be listed in different places,  it  then  pro-
    #    cesses  the  output  of the module it is just before. The dynlib
    #    module can be listed pretty much anywhere, it  is  only  a  very
    #    thin wrapper that allows dynamic libraries to run in its place.
	module-config: "validator iterator"
	
    # so-reuseport: <yes or no>
    #     If  yes,  then  open  dedicated  listening  sockets for incoming
    #     queries for each thread and try to set the  SO_REUSEPORT  socket
    #     option  on  each  socket.   May  distribute  incoming queries to
    #     threads more evenly.  Default is yes.  On Linux it is  supported
    #     in  kernels  >= 3.9.  On other systems, FreeBSD, OSX it may also
    #     work.  You can enable it (on any platform and kernel),  it  then
    #     attempts to open the port and passes the option if it was avail-
    #     able at compile time, if that works it is used, if it fails,  it
    #     continues  silently (unless verbosity 3) without the option.  At
    #     extreme load it could be better to turn it off to distribute the
    #     queries evenly, reported for Linux systems (4.4.x).
    so-reuseport: yes
    
    # num-threads: <number>
    #     The number of threads to create to serve clients. Use 1  for  no
    #     threading.
    num-threads: 4
    
    # prefetch: <yes or no>
    #     If yes, message cache elements are prefetched before they expire
    #     to keep the cache up to date.  Default is  no.   Turning  it  on
    #     gives about 10 percent more traffic and load on the machine, but
    #     popular items do not expire from the cache.
    prefetch: yes

    # prefetch-key: <yes or no>
    #     If yes, fetch the DNSKEYs earlier  in  the  validation  process,
    #     when a DS record is encountered.  This lowers the latency of re-
    #     quests.  It does use a little more CPU.  Also if  the  cache  is
    #     set to 0, it is no use. Default is no.
    prefetch-key: yes
    
    # private-address: <IP address or subnet>
    #     Give IPv4 of IPv6 addresses or classless subnets. These are  ad-
    #     dresses  on  your private network, and are not allowed to be re-
    #     turned for public internet names.  Any occurrence  of  such  ad-
    #     dresses  are  removed from DNS answers. Additionally, the DNSSEC
    #     validator may mark the  answers  bogus.  This  protects  against
    #     so-called  DNS  Rebinding, where a user browser is turned into a
    #     network proxy, allowing remote access  through  the  browser  to
    #     other  parts of your private network.  Some names can be allowed
    #     to contain your private addresses, by default all the local-data
    #     that  you  configured  is  allowed to, and you can specify addi-
    #     tional names using private-domain.  No private addresses are en-
    #     abled  by  default.   We consider to enable this for the RFC1918
    #     private IP address space by  default  in  later  releases.  That
    #     would  enable  private  addresses  for  10.0.0.0/8 172.16.0.0/12
    #     192.168.0.0/16 169.254.0.0/16 fd00::/8 and fe80::/10, since  the
    #     RFC  standards  say these addresses should not be visible on the
    #     public internet.  Turning on 127.0.0.0/8 would hinder many spam-
    #     blocklists   as  they  use  that.   Adding  ::ffff:0:0/96  stops
    #     IPv4-mapped IPv6 addresses from bypassing the filter.
    private-address: 192.168.0.0/16
    private-address: 169.254.0.0/16
    private-address: 172.16.0.0/12
    private-address: 10.0.0.0/8
    private-address: fd00::/8
    private-address: fe80::/10

    # statistics-interval: <seconds>
    #     The number of seconds between printing statistics to the log for
    #     every thread.  Disable with value 0 or "". Default is  disabled.
    #     The  histogram  statistics are only printed if replies were sent
    #     during  the  statistics  interval,  requestlist  statistics  are
    #     printed  for every interval (but can be 0).  This is because the
    #     median calculation requires data to be present.
    statistics-interval: 600

    # extended-statistics: <yes or no>
    #     If enabled, extended statistics are  printed  from  unbound-con-
    #     trol(8).   Default is off, because keeping track of more statis-
    #     tics takes time.  The counters are listed in unbound-control(8).
    extended-statistics: yes

    # statistics-cumulative: <yes or no>
    #     If enabled, statistics are cumulative  since  starting  unbound,
    #     without  clearing the statistics counters after logging the sta-
    #     tistics. Default is no.
    statistics-cumulative: yes

    # serve-expired: <yes or no>
    #     If enabled, unbound attempts to serve old responses  from  cache
    #     with  a  TTL  of serve-expired-reply-ttl in the response without
    #     waiting for the actual resolution to finish.  The actual resolu-
    #     tion answer ends up in the cache later on.  Default is "no".
    serve-expired: yes

    # serve-expired-ttl: <seconds>
    #     Limit  serving  of expired responses to configured seconds after
    #     expiration. 0 disables the limit.  This option only applies when
    #     serve-expired is enabled.  A suggested value per RFC 8767 is be-
    #     tween 86400 (1 day) and 259200 (3 days).  The default is 0.
    serve-expired-ttl: 259200

    # serve-expired-ttl-reset: <yes or no>
    #     Set the TTL of expired records to  the  serve-expired-ttl  value
    #     after  a  failed  attempt  to retrieve the record from upstream.
    #     This makes sure that the expired records will be served as  long
    #     as there are queries for it.  Default is "no".
    serve-expired-ttl-reset: yes
    
    # hide-identity: <yes or no>
    #     If enabled id.server and hostname.bind queries are refused.
    hide-identity: yes

    # identity: <string>
    #     Set the identity to report. If set to "", the default, then  the
    #     hostname of the server is returned.
    identity: ""

    # hide-version: <yes or no>
    #     If enabled version.server and version.bind queries are refused.
    hide-version: yes

    # version: <string>
    #     Set  the  version to report. If set to "", the default, then the
    #     package version is returned.
    version: ""

    # hide-trustanchor: <yes or no>
    #     If enabled trustanchor.unbound queries are refused.
    hide-trustanchor: yes
    
    # verbosity: <number>
    #     The  verbosity  number, level 0 means no verbosity, only errors.
    #     Level 1 gives operational information. Level  2  gives  detailed
    #     operational  information. Level 3 gives query level information,
    #     output per query.  Level 4 gives  algorithm  level  information.
    #     Level 5 logs client identification for cache misses.  Default is
    #     level 1.  The verbosity can also be increased from the  command-
    #     line, see unbound(8).
    verbosity: 0

remote-control:
    # control-enable: <yes or no>
    #     The  option is used to enable remote control, default is "no".  If
    #     turned off, the server does not listen for control commands.
    control-enable: yes

    # control-interface: <ip address or path>
    #     Give IPv4 or IPv6 addresses or local socket path to listen on  for
    #     control  commands.   By  default  localhost (127.0.0.1 and ::1) is
    #     listened to.  Use 0.0.0.0 and ::0 to listen to all interfaces.  If
    #     you  change  this  and  permissions  have  been  dropped, you must
    #     restart the server for the change to take effect.

    #     If you set it to an absolute path, a local socket  is  used.   The
    #     local  socket  does  not  use  the certificates and keys, so those
    #     files need not be present.  To restrict access, unbound sets  per-
    #     missions on the file to the user and group that is configured, the
    #     access bits are set to allow the group members to access the  con-
    #     trol socket file.  Put users that need to access the socket in the
    #     that group.  To restrict access further, create a directory to put
    #     the control socket in and restrict access to that directory.
    control-interface: 0.0.0.0
    control-interface: ::1

    # control-port: <port number>
    #     The  port number to listen on for IPv4 or IPv6 control interfaces,
    #     default is 8953.  If you change this  and  permissions  have  been
    #     dropped,  you  must  restart the server for the change to take ef-
    #     fect.
    control-port: 8953

    # control-use-cert: <yes or no>
    #     For localhost control-interface you can disable the use of TLS  by
    #     setting this option to "no", default is "yes".  For local sockets,
    #     TLS is disabled and the value of this option is ignored.
    control-use-cert: yes

    # server-key-file: <private key file>
    #     Path to the server private  key,  by  default  unbound_server.key.
    #     This file is generated by the unbound-control-setup utility.  This
    #     file is used by the unbound server, but not by unbound-control.
    server-key-file: /etc/unbound/unbound_server.key

    # server-cert-file: <certificate file.pem>
    #     Path to  the  server  self  signed  certificate,  by  default  un-
    #     bound_server.pem.   This  file  is  generated  by the unbound-con-
    #     trol-setup utility.  This file is used by the unbound server,  and
    #     also by unbound-control.
    server-cert-file: /etc/unbound/unbound_server.pem

    # control-key-file: <private key file>
    #     Path  to  the  control client private key, by default unbound_con-
    #     trol.key.  This file is  generated  by  the  unbound-control-setup
    #     utility.  This file is used by unbound-control.
    control-key-file: /etc/unbound/unbound_control.key

    # control-cert-file: <certificate file.pem>
    #     Path  to  the  control client certificate, by default unbound_con-
    #     trol.pem.  This certificate has to be signed with the server  cer-
    #     tificate.   This  file  is  generated by the unbound-control-setup
    #     utility.  This file is used by unbound-control.
    control-cert-file: /etc/unbound/unbound_control.pem


# Note: The prefer-ip4 flag appears to require at least unbound-1.10.0
#       so I've disabled it for now
#       its parner in crime prefer-ip6 (in ipv6.conf in this repository)     
#       was added earlier, it seems around unbound-1.9.1-ish

